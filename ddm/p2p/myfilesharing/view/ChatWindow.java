/*
 * ChatWin.java
 *
 * Created on __DATE__, __TIME__
 */

package ddm.p2p.myfilesharing.view;

import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.JTextArea;

import net.jxta.peergroup.PeerGroup;
import net.jxta.socket.JxtaSocket;

import org.apache.commons.lang.StringUtils;

import ddm.p2p.myfilesharing.chat.model.OnlineMessage;
import ddm.p2p.myfilesharing.chat.service.JxtaServerSocketService;
import ddm.p2p.myfilesharing.chat.util.PipeUtil;
import ddm.p2p.myfilesharing.chat.util.XmlSender;
import ddm.p2p.myfilesharing.constants.Constants;
import ddm.p2p.myfilesharing.utils.AddressUtil;

/**
 * @author 刘浩
 * 聊天窗口类
 */
public class ChatWindow extends javax.swing.JFrame {

	private String hostname = null;
	private JxtaSocket socket=null;

	
	
	/**
	 * 构造函数
	 * @param hostname
	 * @param pg
	 * @param msg
	 */
	public ChatWindow(String hostname,PeerGroup pg, OnlineMessage msg) {
		this.hostname = hostname;	
        try {
			socket = new JxtaSocket(pg,
			        null,
			        PipeUtil.findPipeAdv(pg, JxtaServerSocketService.JxtaServerSocketPipeAdvPrefix + msg.getHostName()),
			        60000,
			        true);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "与"+this.hostname+"建立会话失败，请重试！！", "Error",
					JOptionPane.ERROR_MESSAGE);
			socket=null;
		}
		initComponents();
		this.setVisible(false);
		this.setTitle("与 "+this.hostname+" 聊天中");
	}

	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		chatinglogTextarea = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		inputTextarea = new javax.swing.JTextArea();
		sendMessageButton = new javax.swing.JButton();
		closeButton = new javax.swing.JButton();

		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		chatinglogTextarea.setColumns(20);
		chatinglogTextarea.setRows(5);
		jScrollPane1.setViewportView(chatinglogTextarea);

		inputTextarea.setColumns(20);
		inputTextarea.setRows(5);
		jScrollPane2.setViewportView(inputTextarea);

		sendMessageButton.setText("\u53d1\u9001");
		sendMessageButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						sendMessageButtonActionPerformed(evt);
					}
				});

		closeButton.setText("\u5173\u95ed");
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				jScrollPane2,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				510,
																				Short.MAX_VALUE))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																layout
																		.createSequentialGroup()
																		.addGap(
																				10,
																				10,
																				10)
																		.addComponent(
																				jScrollPane1,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				510,
																				Short.MAX_VALUE)))
										.addContainerGap())
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addContainerGap(397, Short.MAX_VALUE)
										.addComponent(sendMessageButton)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(closeButton).addGap(13,
												13, 13)));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(
						jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
						312, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18,
						18, 18).addComponent(jScrollPane2,
						javax.swing.GroupLayout.PREFERRED_SIZE, 82,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18,
						18).addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(sendMessageButton).addComponent(
										closeButton)).addContainerGap(13,
						Short.MAX_VALUE)));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * 发送消息
	 * @param evt
	 */
	private void sendMessageButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if(!StringUtils.isEmpty(this.inputTextarea.getText())) {
			try {
				this.sendMessageButton.setEnabled(false);
				OutputStream out = (OutputStream) socket.getOutputStream();
				DataOutput dos = new DataOutputStream(out);
				dos.writeInt(Constants.MESSAGE_CHAT);
				
				Object[] chatMsgArr = AddressUtil.splitUTFString(XmlSender.createChatMessage(this.inputTextarea.getText()));
				dos.writeInt(chatMsgArr.length);
				for(int i=0; i<chatMsgArr.length; i++)
					dos.writeUTF((String)chatMsgArr[i]);
				

				SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				String date=dateFormat.format(new Date());
				this.chatinglogTextarea.append(AddressUtil.getUserName());
				this.chatinglogTextarea.append(" "+date);
				this.chatinglogTextarea.append(":\r\n");
				this.chatinglogTextarea.append(this.inputTextarea.getText());
				this.chatinglogTextarea.append("\r\n");
				this.inputTextarea.setText("");							
				out.flush();
				this.sendMessageButton.setEnabled(true);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	private void formWindowClosing(java.awt.event.WindowEvent evt) {
		try {
			P2PForm.chatwins.remove(this.hostname);
			OutputStream out = (OutputStream) socket.getOutputStream();
			DataOutput dos = new DataOutputStream(out);
			dos.writeInt(Constants.MESSAGE_EXITWINDOW);
			//dos.writeUTF(MiscUtil.getHostName());
			//dos.writeUTF(MiscUtil.getUserName());
			out.flush();
			out.close();

			//不关闭socket

		} catch (IOException e) {
			JOptionPane.showMessageDialog(null, "无法建立与"+this.hostname+"的连接！！", "Error",
					JOptionPane.ERROR_MESSAGE);
		}
	}

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			P2PForm.chatwins.remove(this.hostname);
			OutputStream out = (OutputStream) socket.getOutputStream();
			DataOutput dos = new DataOutputStream(out);
			dos.writeInt(Constants.MESSAGE_EXITWINDOW);
			//dos.writeUTF(MiscUtil.getHostName());
			//dos.writeUTF(MiscUtil.getUserName());
			out.flush();
			out.close();
			this.dispose();

			//不关闭socket

		} catch (IOException e) {
			JOptionPane.showMessageDialog(null, "无法建立与"+this.hostname+"的连接！！", "Error",
					JOptionPane.ERROR_MESSAGE);
		}
	}

	/**
	 * 连接可用
	 */
	public void enableInputAndSend() {
		this.inputTextarea.setText("");
		this.inputTextarea.setEnabled(true);
		this.chatinglogTextarea.setEnabled(true);
		this.sendMessageButton.setEnabled(true);
	}

	/**
	 * 断开连接不可用
	 * @param hostname
	 */
	public void disableInputAndSend(String hostname) {
		this.inputTextarea.setText(hostname + "已离开会话");
		this.inputTextarea.setEnabled(false);
		this.chatinglogTextarea.setEnabled(false);
		this.sendMessageButton.setEnabled(false);
	}

	/**
	 * 得到聊天区
	 * @return
	 */
	public JTextArea getchatTextArea() {
		return chatinglogTextarea;
	}

	/**
	 * 得到JxtaSocket
	 * @return
	 */
	public JxtaSocket getJxtaSocket(){
		return socket;
	}
	
	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JTextArea chatinglogTextarea;
	private javax.swing.JButton closeButton;
	private javax.swing.JTextArea inputTextarea;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JButton sendMessageButton;
	// End of variables declaration//GEN-END:variables

}